<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AnubhavSaini</title>
    <description>This site belongs to Anubhav Saini. A polyglot programmer, who likes law, science, movies, technology, software...
</description>
    <link>http://iamanubhavsaini.github.io//</link>
    <atom:link href="http://iamanubhavsaini.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 12 Oct 2015 12:16:30 +0530</pubDate>
    <lastBuildDate>Mon, 12 Oct 2015 12:16:30 +0530</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Feedback message for online course out there.</title>
        <description>&lt;p&gt;Following is the advice I gave.&lt;/p&gt;

&lt;p&gt;There should be more multiple choice questions; 20+ instead of just 5 questions.&lt;/p&gt;

&lt;p&gt;There should be more MCQ tests. 5+ instead of just one.&lt;/p&gt;

&lt;p&gt;There should be more assignments. 3+ instead of just one. Make it one easy, one medium and one hard.&lt;/p&gt;

&lt;p&gt;There should be more optional assignments. 5+ instead of just one.&lt;/p&gt;

&lt;p&gt;I know you guys are working hard as it is, but we learn by doing, not by listening or watching. Just food of thought.&lt;/p&gt;

&lt;p&gt;Then I thought I should make a post about it and make my point clearly.&lt;/p&gt;

&lt;p&gt;I found out that I learn by doing. Doing not the large problems or a huge task, but by doing small tasks that are inter-related. I learn what I do and when I get feedback quickly, I learn better. It’s like testing-development loop, where I learn by making incremental changes to my knowledge and by making incremental changes to my work and voila, I learn.&lt;/p&gt;

&lt;p&gt;Here’s one such loop.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/How-I-learn.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you notice, there’s no stopping to learning. That’s by design.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 16:42:13 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/2015/10/12/Message-for-every-online-course.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/2015/10/12/Message-for-every-online-course.html</guid>
        
        <category>online-courses</category>
        
        <category>coursera</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Code Kata for the day - 12th Oct, 2015.</title>
        <description>&lt;p&gt;So, I did this exercise &lt;a href=&quot;http://iamanubhavsaini.github.io/daily/code-kata/2015/10/11/Code-Kata-1.html&quot;&gt;yesterday&lt;/a&gt;. Today I am going to do same exercise. But I am not going to sit idly-by. In subsequent kata, I will start to code.&lt;/p&gt;

&lt;p&gt;So this kata is about pricing items in a supermarket. Here we go:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We need to price items that have price fixed to it’s count, e.g price of a bottle of wine.&lt;/li&gt;
  &lt;li&gt;We need to price items that have price fixed to it’s quantity, e.g. price of 1 KG of potatoes.&lt;/li&gt;
  &lt;li&gt;We need to price items that have price fixed to it’s attributes, e.g. blue pair of jeans is costlier than white one.&lt;/li&gt;
  &lt;li&gt;We need to price items that can have discount based on quantity, e.g. 1 free for every 3.&lt;/li&gt;
  &lt;li&gt;We need to price items that can have discount based on date range, e.g. this week.&lt;/li&gt;
  &lt;li&gt;We need to price items that can have discount based on day of the week, e.g. super sale Wednesdays.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;I said in earlier post that I will create small programming problems. I am going to do that. This kata is anyway a shower kata, I’ll get to doing that when I am in shower.&lt;/p&gt;

&lt;p&gt;To solve this problem generally I’d need: types - &lt;code&gt;Item&lt;/code&gt;; services: &lt;code&gt;discountService&lt;/code&gt;, &lt;code&gt;priceService&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pretty much when store wants to calculate &lt;code&gt;price&lt;/code&gt;, it’ll call &lt;code&gt;priceService&lt;/code&gt;, and that in turn will call &lt;code&gt;discountService&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This much design looks simple and benign.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kata/2015-10-12-Kata-1-SuperMarketPricing-1.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kata/2015-10-12-Kata-1-SuperMarketPricing-2.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kata/2015-10-12-Kata-1-SuperMarketPricing-3.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have mentioned possible buy, what I mean is that customer might ask price and do not buy or buy afterwards, or just buy without asking for price or discount.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/kata/2015-10-12-Kata-1-SuperMarketPricing-4.PNG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anyway, This kata will continue in my head for a forseeable future and I will continue creating a new post every day. You should probably checkout other posts or whatever.&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 15:09:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/code-kata/2015/10/12/Code-Kata-1.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/code-kata/2015/10/12/Code-Kata-1.html</guid>
        
        <category>programming</category>
        
        <category>code</category>
        
        <category>kata</category>
        
        <category>daily</category>
        
        
        <category>daily</category>
        
        <category>code-kata</category>
        
      </item>
    
      <item>
        <title>Code Kata for the day - 11th Oct, 2015.</title>
        <description>&lt;p&gt;I am going to start with &lt;code&gt;Supermarket Pricing&lt;/code&gt;. Problem is very simple: pricing goods at supermarkets.&lt;/p&gt;

&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Items can have price per unit. For example: INR 20 per packet of bread.&lt;/li&gt;
  &lt;li&gt;Items can have price per weight-unit. For example: INR 40 per kilogram of sugar.&lt;/li&gt;
  &lt;li&gt;Items can have price that is discounted.&lt;/li&gt;
  &lt;li&gt;Discounts may apply on certain items.&lt;/li&gt;
  &lt;li&gt;Discounts may apply on bill per certain rules.&lt;/li&gt;
  &lt;li&gt;People can pay with vouchers, IOUs etc.&lt;/li&gt;
  &lt;li&gt;People can get discount if they show up with advertisement.&lt;/li&gt;
  &lt;li&gt;People can get discount if they buy stuff in groups.&lt;/li&gt;
  &lt;li&gt;People can buy stuff in groups.&lt;/li&gt;
  &lt;li&gt;Items can have incremental or consumption based discount.&lt;/li&gt;
  &lt;li&gt;Items can have multiple selling prices depending upon the inventory.&lt;/li&gt;
  &lt;li&gt;People can return items.&lt;/li&gt;
  &lt;li&gt;People can return discounted items.&lt;/li&gt;
  &lt;li&gt;People may not have change on them.&lt;/li&gt;
  &lt;li&gt;People may want to pay with cash and cards.&lt;/li&gt;
  &lt;li&gt;Same type of item can cost different based on it’s attributes. For example: old and new clothes, food etc.&lt;/li&gt;
  &lt;li&gt;Store wants to keep track of the money it has in it’s cash registers.&lt;/li&gt;
  &lt;li&gt;Store wants to keep track of inventory currently in the store.&lt;/li&gt;
  &lt;li&gt;Store wants to replenish items as soon as they deplete from the shelves.&lt;/li&gt;
  &lt;li&gt;Store might levy return charges on items.&lt;/li&gt;
  &lt;li&gt;Store might allow to remove an item from purchase after it has been billed but before bill has been finalized and paid.&lt;/li&gt;
  &lt;li&gt;Store might want to discount items based on days.&lt;/li&gt;
  &lt;li&gt;Store might want to have discount-run based on dates.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Items can have price per unit.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;We would need a type that tells what the item is.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;We would need a price services that tells us what the current price of the item is.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;We would need a discount service that price service calls to find discount on the item.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Items can have price per weight-unit.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;We would need to have items as item for store inventory keeping.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;We would need to have items as identifier and associated features for customers.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;Customer might want to know color, weight and other things.&lt;br /&gt;
 &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;We would need to have items as identifier + associated features for price calculating service.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;At this point I am thinking that I can literally convert this problem into my own code kata. I can practically carve out at least 5 small programming exercises out of it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt; 
 &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Items can have price that is discounted.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;A discount service will keep track of discount.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Will update soon.&lt;/p&gt;

&lt;p&gt;Update: Nope didn’t have time.&lt;/p&gt;

&lt;p&gt;You might want to check &lt;a href=&quot;/daily/code-kata/2015/10/12/Code-Kata-1.html&quot;&gt;next day’s kata&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Oct 2015 14:21:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/code-kata/2015/10/11/Code-Kata-1.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/code-kata/2015/10/11/Code-Kata-1.html</guid>
        
        <category>programming</category>
        
        <category>code</category>
        
        <category>kata</category>
        
        <category>daily</category>
        
        
        <category>daily</category>
        
        <category>code-kata</category>
        
      </item>
    
      <item>
        <title>Questions for the day - 11th Oct, 2015.</title>
        <description>&lt;h2 id=&quot;questions-are&quot;&gt;10 Questions are:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Why do humans crave for sugar?&lt;/li&gt;
  &lt;li&gt;What does sugar do to our innards?&lt;/li&gt;
  &lt;li&gt;Is sugar acidic or basic?&lt;/li&gt;
  &lt;li&gt;How much can wooden doors expand or shrink?&lt;/li&gt;
  &lt;li&gt;What natural wood is impervious to water and wood-destroying insects?&lt;/li&gt;
  &lt;li&gt;How much can our intestines expand?&lt;/li&gt;
  &lt;li&gt;What is pH level of our intestines?&lt;/li&gt;
  &lt;li&gt;What is pH?&lt;/li&gt;
  &lt;li&gt;Does pure water harms us?&lt;/li&gt;
  &lt;li&gt;How long can a person sustain without solid food? Only water and juices are allowed. Juices can be of anything, but have to have density and viscosity of water.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 11 Oct 2015 14:12:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/questions/2015/10/11/Questions-1.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/questions/2015/10/11/Questions-1.html</guid>
        
        <category>questions</category>
        
        <category>daily</category>
        
        
        <category>daily</category>
        
        <category>questions</category>
        
      </item>
    
      <item>
        <title>Lemon Programming.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/lemon/TheBrilliantLemonFruit.png&quot; title=&quot;The brilliant lemon fruit.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;so-you-want-to-program-like-a-lemon&quot;&gt;So you want to program like a lemon.&lt;/h2&gt;

&lt;p&gt;You first need to learn what lemon programming is about.&lt;/p&gt;

&lt;p&gt;Check out the list below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You need to make sure that switch works. Really works.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  switch(number){  
  case 0:  
      if(number != 0){ abort(); }  
      else /* do something */  
  }  
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You need to mix spaces with tabs.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  void main () {  
      int i = 0;  
      if( !i ){  
        /* do this */  
      }  
      else  
          /* do that */  
    return 0;  
  }  
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You need to mix {} with (lack of {})&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  if( number == 0){
      number = 1;
  }
  else
      number = 0;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You need to save bytes where possible. So use &lt;code&gt;=&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; instead of &lt;code&gt;===&lt;/code&gt;&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;  if( number = 0){
      number = 1;
  }
  else
      number = 0;
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You need to implement cache first and when it hurts, refactor it.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If it still hurts, remove the cache implemented sofar and start from scratch.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You need to grow a pair of oo and tell yout team that you will test your code at run time. Who needs pesky test cases anyway: only lame programmers. Not you!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You need to refactor the code every other day. It doesn’t matter if it is already optimized. Make it better. Make it better.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;want-to-work-at-a-lemon-software-that-is-oh-so-open-sourced-too&quot;&gt;Want to work at a lemon software that is oh so open sourced too?&lt;/h2&gt;

&lt;p&gt;Visit &lt;a href=&quot;https://github.com/iamanubhavsaini/lemon&quot;&gt;lemon - a browser that doesn’t browse&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Oct 2015 05:29:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//lemon/2015/10/11/Lemon-Programming.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//lemon/2015/10/11/Lemon-Programming.html</guid>
        
        <category>lemon</category>
        
        <category>programming</category>
        
        
        <category>lemon</category>
        
      </item>
    
      <item>
        <title>Time it takes to.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/blog/Time-it-takes-me-to.PNG&quot; title=&quot;Time it takes me to do some stuff.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 16:36:12 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/2015/10/08/Time-it-takes-to.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/2015/10/08/Time-it-takes-to.html</guid>
        
        <category>time</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Things people are doing.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/comic/Things-people-are-doing-2.PNG&quot; title=&quot;Things people are doing with their lives; and things I am doing, in contrast - Part Deux.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://iamanubhavsaini.github.io/comic/2015/10/08/Things-people-are-doing.html&quot;&gt;Have you seen part one? Click me I am a link.&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 01:25:44 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//comic/2015/10/08/Things-people-are-doing.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//comic/2015/10/08/Things-people-are-doing.html</guid>
        
        <category>comics</category>
        
        <category>doing</category>
        
        <category>life</category>
        
        
        <category>comic</category>
        
      </item>
    
      <item>
        <title>Things people are doing.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/comic/Things-people-are-doing.PNG&quot; title=&quot;Things people are doing with their lives; and things I am doing, in contrast.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 01:25:44 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//comic/2015/10/08/Things-people-are-doing.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//comic/2015/10/08/Things-people-are-doing.html</guid>
        
        <category>comics</category>
        
        <category>doing</category>
        
        <category>life</category>
        
        
        <category>comic</category>
        
      </item>
    
      <item>
        <title>I cannot figure out relationship between age, money and happyness.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/comic/I-cannot-figure-this-out.PNG&quot; title=&quot;I cannot figure out relationship between age, money and happyness.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 01:19:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//comic/2015/10/08/I-cannot-figure-out-money-age-happyness.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//comic/2015/10/08/I-cannot-figure-out-money-age-happyness.html</guid>
        
        <category>comics</category>
        
        <category>happyness</category>
        
        <category>work</category>
        
        <category>money</category>
        
        <category>age</category>
        
        
        <category>comic</category>
        
      </item>
    
      <item>
        <title>Feel useless.</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/comic/Feel-useless.PNG&quot; title=&quot;Insatiable learning mind makes me feel useless at dusk.&quot; /&gt;
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Oct 2015 01:12:53 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//comic/2015/10/08/Feel-useless.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//comic/2015/10/08/Feel-useless.html</guid>
        
        <category>comics</category>
        
        <category>learn</category>
        
        <category>work</category>
        
        <category>read</category>
        
        <category>feel-useless</category>
        
        
        <category>comic</category>
        
      </item>
    
  </channel>
</rss>
