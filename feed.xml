<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AnubhavSaini</title>
    <description>This site belongs to Anubhav Saini. A polyglot programmer, who likes law, science, movies, technology, software...
</description>
    <link>http://iamanubhavsaini.github.io//</link>
    <atom:link href="http://iamanubhavsaini.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 09 Nov 2015 00:26:25 +0530</pubDate>
    <lastBuildDate>Mon, 09 Nov 2015 00:26:25 +0530</lastBuildDate>
    <generator>Jekyll v2.2.0</generator>
    
      <item>
        <title>Cleaning Laptop</title>
        <description>&lt;p&gt;I like to clean my laptop and mobile by opening them up. I did this exercise about 5 months back. It was tense. You loose one screw or yank something a little too forcefully, and it dies on you. Believe me when I say this: A $1000 laptop can die because you handled it just a little casually. Anyway, I take such calculated risks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_183545.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_184820.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_184849.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_190010.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_192729.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_193041.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_193049.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_193059.jpg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/images/blog/laptop-cleanup/20151106_193827.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Nov 2015 20:00:02 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/2015/11/06/Cleaning-laptop.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/2015/11/06/Cleaning-laptop.html</guid>
        
        <category>cleanup</category>
        
        <category>hardware</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>JavaScript - 3 - JavaScript 5 has functional scope.</title>
        <description>&lt;p&gt;JavaScript #3 - JavaScript 5 has functional scope.&lt;/p&gt;

&lt;p&gt;At least up to ES5, JS has functional scope.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    function f(){
        var a = 10;
        // a belongs to function f.

        for(var i = 0; i &amp;lt; a; i++){
            // do something with i;
        }

        console.log(i);
        // i could be undefined,
        // as i is scoped for only for loop (in other languages).
        // But not in JS. i is alive-and-kicking.

        console.log(a);

        function g(){
        // yes function inside function check JavaScript #4

            i = 100;
            // this refers to f()&#39;s i.

            var j = 10;
            // g()&#39;s j.

            console.log(i);
            console.log(j);
        }
        g(); // 100 and 10

        console.log(i); // 100

        console.log(j);
        // error if no j is defined outside function f().
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well, functions in JavaScript, are the only scope containers. For loop, { } that constitute blocks are not scope containers.&lt;/p&gt;

&lt;p&gt;ES6 has added extra functionality to have block level scopes.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2015 17:03:27 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-3.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-3.html</guid>
        
        <category>blog</category>
        
        <category>post</category>
        
        <category>javascript</category>
        
        
        <category>blog</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>JavaScript - 1 - JavaScript has floating point numbers.</title>
        <description>&lt;p&gt;Javascript #1 - JavaScript has floating point numbers, so don’t compare them.&lt;/p&gt;

&lt;p&gt;JavaScript has IEEE 754 standard for representing numbers.&lt;/p&gt;

&lt;p&gt;Comparing them (the decimal ones) creates problems.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    0.1 + 0.2 === 0.3
    false

    a = 0.1
    0.1
    b = 0.2
    0.2
    c = 0.3
    0.3
    a + b === c
    false

    d = a + b
    0.30000000000000004
    a + b === d
    true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, integers are perfectly fine.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    1 + 2 === 3
    true

    a = 1
    1
    b = 2
    2
    c = 3
    3
    a + b === c
    true

    d = a + b
    3
    a + b === d
    true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you go.&lt;/p&gt;

&lt;h1 id=&quot;references-for-more-reading&quot;&gt;References for more reading.&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_754-1985&quot;&gt;https://en.wikipedia.org/wiki/IEEE_754-1985&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://stackoverflow.com/a/17849204&quot;&gt;http://stackoverflow.com/a/17849204&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://docs.python.org/2/tutorial/floatingpoint.html#representation-error&quot;&gt;https://docs.python.org/2/tutorial/floatingpoint.html#representation-error&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2015 16:57:27 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-1.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-1.html</guid>
        
        <category>blog</category>
        
        <category>post</category>
        
        <category>javascript</category>
        
        
        <category>blog</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>JavaScript - 2 - Numbers can be concatenated to form strings sometimes.</title>
        <description>&lt;p&gt;JavaScript #2 - Numbers can be concatenated to form strings sometimes.&lt;/p&gt;

&lt;p&gt;Consider following piece of code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    i = 10;
    10
    j = 20;
    20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Printing i + j is not an issue as it still will be a number.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    console.log(i + j)
    30
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But putting a string on the same line as number addition turns on the concatenation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    console.log(&#39;i + j = &#39; + i + j)
    i + j = 1020
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Such concatenation can be prevented using parenthesis:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    console.log(&#39;i + j = &#39; + (i + j))
    i + j = 30
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, beware of numbers that are added to strings. + looks like a friend, but in reality it’s frenemy.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2015 16:53:27 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-2.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/javascript/2015/10/27/JavaScript-2.html</guid>
        
        <category>blog</category>
        
        <category>post</category>
        
        <category>javascript</category>
        
        
        <category>blog</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Suggestion 1 for Windows-Next.</title>
        <description>&lt;p&gt;So Windows installs itself in C drive. Users can put all sorts of crap in C drive. Well, I want to suggest windows that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Carve out a 20 GiB drive named C in hard-disk.&lt;/li&gt;
  &lt;li&gt;Install Windows in C drive.&lt;/li&gt;
  &lt;li&gt;Make C drive unaccessible to users.&lt;/li&gt;
  &lt;li&gt;Every software installed other than Windows will go to a different drive.&lt;/li&gt;
  &lt;li&gt;Every document, download, picture, configuration etc will go to different drive.&lt;/li&gt;
  &lt;li&gt;Whatever you do, do not relinquish hold on C drive. Make it immutable for everything other than Windows update.   Make it invisible for users: developers and end-users alike.&lt;/li&gt;
  &lt;li&gt;Put all the cache for Windows in C drive including page-files. Cache and page-files for other drives will live somewhere else.&lt;/li&gt;
  &lt;li&gt;Put all the settings and configurations outside C drive.&lt;/li&gt;
  &lt;li&gt;Make sure that you and user understand that OS drive exists only to provide users a platform.&lt;/li&gt;
  &lt;li&gt;In a multi processor architecture, assign a processor permanently to windows. Do not let user-space see it. They will loose a processor but gain stability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well by doing this, OS will become unhackable by exernal programs. Windows will not be able to crash because of user space viruses. Backup will be a breeze etc.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Oct 2015 16:27:27 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/2015/10/27/Windows-Next-Upgrade-Suggestion-1.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/2015/10/27/Windows-Next-Upgrade-Suggestion-1.html</guid>
        
        <category>blog</category>
        
        <category>post</category>
        
        <category>windows</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Quote of the day.</title>
        <description>&lt;div class=&quot;QuoteContainer&quot;&gt;
&lt;div class=&quot;Quote&quot;&gt;
Freddy, as a younger man, I was a sculptor, a painter, and a musician. There was just one problem: I wasn’t very good. As a matter of fact, I was dreadful. I finally came to the frustrating conclusion that I had taste and style, but not talent. I knew my limitations. &lt;span class=&quot;emphasis&quot;&gt;We all have our limitations&lt;/span&gt;, Freddy. Fortunately, I discovered that taste and style were commodities that &lt;span class=&quot;emphasis&quot;&gt;people desired&lt;/span&gt;. Freddy, what I am saying is: &lt;span class=&quot;emphasis&quot;&gt;know your limitations. You are a moron.&lt;/span&gt;
&lt;/div&gt;
&lt;div class=&quot;Quoter&quot;&gt;Lawrence Jamieson, Dirty Rotten Scoundrels (1988)&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 24 Oct 2015 23:55:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/quotes/2015/10/24/Quote-Of-The-Day.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/quotes/2015/10/24/Quote-Of-The-Day.html</guid>
        
        <category>daily</category>
        
        <category>quotes</category>
        
        <category>motivational</category>
        
        <category>QoD</category>
        
        <category>Movie-Quote</category>
        
        
        <category>daily</category>
        
        <category>quotes</category>
        
      </item>
    
      <item>
        <title>CSS-JS Example 1.</title>
        <description>&lt;div id=&quot;header&quot;&gt;
  &lt;div id=&quot;top&quot;&gt;&lt;/div&gt;
  &lt;div id=&quot;bottom&quot;&gt;&lt;/div&gt;
  &lt;div id=&quot;me&quot;&gt;&lt;div id=&quot;name&quot;&gt;Anubhav Saini&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&quot;nav&quot;&gt;
    &lt;a href=&quot;/about&quot;&gt;about&lt;/a&gt;
    &lt;a href=&quot;/index.html&quot;&gt;home&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  var changeStyleSheet = function (newLinkHref) {
    var links = document.getElementsByTagName(&#39;link&#39;);
    var oldLink = links[links.length-1];
    var newLink = document.createElement(&#39;link&#39;);
    newLink.setAttribute(&#39;type&#39;, &#39;text/css&#39;);
    newLink.setAttribute(&#39;rel&#39;, &#39;stylesheet&#39;);
    newLink.setAttribute(&#39;href&#39;, newLinkHref);
    document.getElementsByTagName(&#39;head&#39;)[0].replaceChild(newLink, oldLink);
  }
&lt;/script&gt;

&lt;hr /&gt;

&lt;div id=&quot;buttons&quot;&gt;
  &lt;input type=&quot;button&quot; onclick=&quot;changeStyleSheet(&amp;quot;/css/css-js-example-1-stylesheet-1.css&amp;quot;);&quot; value=&quot;style #1&quot; /&gt;
  &lt;input type=&quot;button&quot; onclick=&quot;changeStyleSheet(&amp;quot;/css/css-js-example-1-stylesheet-2.css&amp;quot;);&quot; value=&quot;style #2&quot; /&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 24 Oct 2015 16:22:44 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/the-example-project/2015/10/24/First-Example.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/the-example-project/2015/10/24/First-Example.html</guid>
        
        <category>daily</category>
        
        <category>css-js-example</category>
        
        <category>the-example-project</category>
        
        <category>css</category>
        
        <category>javascript</category>
        
        
        <category>daily</category>
        
        <category>the-example-project</category>
        
      </item>
    
      <item>
        <title>A Self-Replicating JavaScript Button.</title>
        <description>&lt;p&gt;A Self-Replicating JavaScript Button is the name of the challenge I am throwing to myself. This should be by far the easiest way to create self-replicating computer code.&lt;/p&gt;

&lt;p&gt;So a button looks like:&lt;/p&gt;

&lt;p&gt;&lt;input type=&quot;button&quot; value=&quot;a button&quot; onclick=&quot;alert(&#39;I do nothing&#39;);&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you go to &lt;a href=&quot;https://github.com/IAmAnubhavSaini/a-self-replicating-button&quot;&gt;https://github.com/IAmAnubhavSaini/a-self-replicating-button&lt;/a&gt; then you can find the button with code around it.&lt;/p&gt;

&lt;p&gt;Download it and click it. See what happens.&lt;/p&gt;

&lt;p&gt;You can test the same thing here though.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
  var selfReplicate = function () {
    var button = document.createElement(&#39;input&#39;);
    button.type=&quot;button&quot;;
    button.value = &quot;a self replicating button&quot;;
    button.onclick = selfReplicate;
    document.getElementById(&#39;srbs&#39;).appendChild(button);
  }
&lt;/script&gt;

&lt;div id=&quot;srbs&quot;&gt;
  &lt;input type=&quot;button&quot; value=&quot;a self replicating button&quot; onclick=&quot;selfReplicate();&quot; /&gt;


&amp;nbsp;

---

&amp;nbsp;

A few new problems emerged though: How to test DOM? What good is Jasmine for?
&lt;/div&gt;
</description>
        <pubDate>Fri, 23 Oct 2015 23:55:56 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//blog/javascript/2015/10/23/A-self-replicating-javascript-button.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//blog/javascript/2015/10/23/A-self-replicating-javascript-button.html</guid>
        
        <category>programming</category>
        
        <category>JavaScript</category>
        
        <category>blog</category>
        
        
        <category>blog</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Quote of the day.</title>
        <description>&lt;div class=&quot;QuoteContainer&quot;&gt;
&lt;div class=&quot;Quote&quot;&gt;
When you decide to achieve something and vow for it solemnly, universe bends itself to let you have what you desire so restlessly.
&lt;/div&gt;
&lt;div class=&quot;Quoter&quot;&gt;Anubhav Saini&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 23 Oct 2015 23:24:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/quotes/2015/10/23/Quote-Of-The-Day.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/quotes/2015/10/23/Quote-Of-The-Day.html</guid>
        
        <category>daily</category>
        
        <category>quotes</category>
        
        <category>motivational</category>
        
        <category>QoD</category>
        
        
        <category>daily</category>
        
        <category>quotes</category>
        
      </item>
    
      <item>
        <title>Quote of the day.</title>
        <description>&lt;div class=&quot;QuoteContainer&quot;&gt;
&lt;div class=&quot;Quote&quot;&gt;
Make a decision today to not stay mediocre. Make a decision today to excel at something. Pour yourself into it. Forget everything else. See that what you decided to do manifested physically and that you succeeded.
&lt;/div&gt;
&lt;div class=&quot;Quoter&quot;&gt;Anubhav Saini&lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 22 Oct 2015 23:24:59 +0530</pubDate>
        <link>http://iamanubhavsaini.github.io//daily/quotes/2015/10/22/Quote-Of-The-Day.html</link>
        <guid isPermaLink="true">http://iamanubhavsaini.github.io//daily/quotes/2015/10/22/Quote-Of-The-Day.html</guid>
        
        <category>daily</category>
        
        <category>quotes</category>
        
        <category>motivational</category>
        
        <category>QoD</category>
        
        
        <category>daily</category>
        
        <category>quotes</category>
        
      </item>
    
  </channel>
</rss>
